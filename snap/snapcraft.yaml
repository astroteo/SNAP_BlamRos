name: blamonlyyou # you probably want to 'snapcraft register <name>'
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: this app is a frontend for Blam-ROS commands  # 79 char long summary
description: |
  final-goal:  a snap post-processing full appliation .bag --> {point-cloud.pcd, odometry.csv}, suitable for a self contained post-processing of data acqurired from 3DT-slam-backpack.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

parts:
  app:
    after: [gtsam,blam-internal-1]
    plugin: python
    python-version: python2
    source: ./app_src
    #organize:
      #main.py: app

    #stage-packages:
      #- python
      #- g++
      #- python-pyqt5
      #- python3-pyqt5
      #- python3-pyqt5.qtquick
      #- overlay-scrollbar-gtk2
      #- libatk-adaptor
      #- libcanberra-gtk-module
      #- libogre-1.9.0v5
      #- libogre-1.9-dev
      #- g++
      #- libboost-all-dev
      #- libeigen3-dev
      #- libpcl-dev
     

    

    #after: [desktop-qt5, ros-workspace]
  gtsam:
    plugin: cmake
    source: ./gtsam
    build-packages:
      - build-essential
      - cmake-extras
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=$SNAPCRAFT_PART_INSTALL
    #override-build: |
      #snapcraftctl build
      #mkdir build
      #cd build
      #echo "This  runs after gtsam after build!"
  
    install: 
      make install
    stage: [ include/*, lib/* ]
    prime: [ lib/* ]
    stage-packages: 
      - libboost-all-dev
      - libeigen3-dev
      - libpcl-dev
      - libatlas-dev
      - g++

  #pcl-ros:
    #plugin: dump
    #source: http://packages.ros.org/ros/ubuntu/pool/main/r/ros-kinetic-pcl-ros/ros-kinetic-pcl-ros_1.4.4-0xenial-20181005-173908-0800_amd64.deb 
    #source-type: deb
    #build-packages: [
      #libeigen3-dev,
      #libboost-all-dev,
      #libpcl-dev,
       #python-rosinstall,
      #python-pip
    #]
    #override-build: |
      #snapcraftctl build
      #echo "installing pcl-ros..."
      #dpkg -i $SNAPCRAFT_PART_INSTALL/ros-kinetic-pcl-ros.deb
      #echo "... end of install proceadure...executing apt-get install"
      #apt-get install -f 


  #- ros-kinetic-pcl-ros,
  #- ros-kinetic-pcl-conversions

  #blam-external:
    #plugin: catkin-tools
    #after: [gtsam,app]
    #rosdistro: kinetic
    #source: ./catkin_ws/external
    #rosinstall-files: [blam-external.rosinstall]
    #stage-packages: [
      #ros-kinetic-pcl-ros,
      #ros-kinetic-desktop-full,
    #]
    #catkin-cmake-args:
      #- -DCMAKE_BUILD_TYPE=Release
    #stage:
      #- -usr/bin/curl-config
      #- -usr/lib/x86_64-linux-gnu/libcurl.a
      #- -usr/lib/x86_64-linux-gnu/libcurl.la
      #- -usr/lib/x86_64-linux-gnu/libcurl.so
      #- -usr/lib/x86_64-linux-gnu/pkgconfig/libcurl.pc


  blam-internal-1:
    after: [gtsam]
    plugin: catkin
    source: ./catkin_ws/internal-1/
    rosdistro: kinetic
    catkin-packages: [ geometry_utils,
                       parameter_utils,
                       point_cloud_filter,
                       point_cloud_localization,
                       point_cloud_odometry,
                       point_cloud_mapper,
                       point_cloud_visualizer,
                       measurement_synchronizer,
                       pose_graph_msgs,
                       laser_loop_closure, 
                       blam_slam,
                       blam_example,
                       bagpack
                     ]
    catkin-cmake-args:
      - -DCMAKE_BUILD_TYPE=Release
    build-packages:
      - build-essential
      - python-dev
      - python-setuptools
      - libboost-all-dev
      - libeigen3-dev
      - libpcl-dev
      - python-numpy
    stage-packages: [
      ros-kinetic-pcl-ros,
      ros-kinetic-desktop-full,
    ]
    stage:
      - -opt/ros/kinetic/lib/python2.7/dist-packages/genmsg/gentools.pyc
      - -usr/bin/xml2-config
      - -usr/bin/curl-config
      - -usr/lib/x86_64-linux-gnu/libcurl.a
      - -usr/lib/x86_64-linux-gnu/libcurl.la
      - -usr/lib/x86_64-linux-gnu/libcurl.so
      - -usr/lib/x86_64-linux-gnu/pkgconfig/libcurl.pc

    override-build: |
      echo "$SNAPCRAFT_PART_INSTALL"
      #source /home/teo/Documents/SNAP_cleanBlam/parts/blam-external/src/devel_isolated/setup.bash


  #backpack:
    #after: [gtsam,blam-internal-1]
    #plugin: catkin
    #source: ./backpack_ws
    #rosdistro: kinetic
    #catkin-packages: [backpack]
    #catkin-cmake-args:
      #- -DCMAKE_BUILD_TYPE=Release
    #build-packages:
      #- build-essential
      #- libboost-all-dev
      #- libeigen3-dev
      #- libpcl-dev
      #- python-numpy
    #stage:
      #- -opt/ros/kinetic/lib/python2.7/dist-packages/genmsg/gentools.pyc
      #- -usr/bin/xml2-config
      #- -usr/bin/curl-config
      #- -usr/lib/x86_64-linux-gnu/libcurl.a
      #- -usr/lib/x86_64-linux-gnu/libcurl.la
      #- -usr/lib/x86_64-linux-gnu/libcurl.so
      #- -usr/lib/x86_64-linux-gnu/pkgconfig/libcurl.pc

    #override-build: |
      #echo "$SNAPCRAFT_PART_INSTALL"
      ##source /home/teo/Documents/SNAP_cleanBlam/parts/blam-external/src/devel_isolated/setup.bash





apps:
  blamonly:
    command: blamonlyyou
    plugs: [network, network-bind, home,locale-control, gsettings]
    







